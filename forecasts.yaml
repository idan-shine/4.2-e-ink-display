  - trigger:
      - platform: time_pattern
        hours: /1
    action:
      - service: weather.get_forecasts
        data:
          type: daily
        target:
          entity_id: weather.openweathermap
        response_variable: my_forcast
    sensor:
      - name:  Day1 Forecast
        unique_id: sensor.day_1_forecast
        state: "{{ my_forcast['weather.openweathermap'].forecast[1].condition }}"
      - name: Day1 Temp
        unique_id: sensor.day_1_temp
        state: "{{ my_forcast['weather.openweathermap'].forecast[1].temperature }}"
        unit_of_measurement: °C
      - name: Day1 day name
        unique_id: sensor.day_1_dow
        state: "{{ as_datetime(my_forcast['weather.openweathermap'].forecast[1].datetime).strftime('%a') }}"

      - name:  Day2 Forecast
        unique_id: sensor.day_2_forecast
        state: "{{ my_forcast['weather.openweathermap'].forecast[2].condition }}"
      - name: Day2 Temp
        unique_id: sensor.day_2_temp
        state: "{{ my_forcast['weather.openweathermap'].forecast[2].temperature }}"
        unit_of_measurement: °C
      - name: Day2 day name
        unique_id: sensor.day_2_dow
        state: "{{ as_datetime(my_forcast['weather.openweathermap'].forecast[2].datetime).strftime('%a') }}"        
        
      - name:  Day3 Forecast
        unique_id: sensor.day_3_forecast
        state: "{{ my_forcast['weather.openweathermap'].forecast[3].condition }}"
      - name: Day3 Temp
        unique_id: sensor.day_3_temp
        state: "{{ my_forcast['weather.openweathermap'].forecast[3].temperature }}"
        unit_of_measurement: °C
      - name: Day3 day name
        unique_id: sensor.day_3_dow
        state: "{{ as_datetime(my_forcast['weather.openweathermap'].forecast[3].datetime).strftime('%a') }}"
